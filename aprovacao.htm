<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aprovação Financeira de SICs</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            max-width: 1000px;
            margin: auto;
            /* display: none; */ /* Será controlado pelo script */
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
            font-size: 14px;
        }
        th {
            background-color: #f2f2f2;
            color: #333;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .status-badge {
            display: inline-block;
            padding: 5px 8px;
            border-radius: 4px;
            font-size: 0.8em;
            color: white;
            font-weight: bold;
            white-space: nowrap;
        }
        /* Status Financeiro */
        .status-badge.Pendente { background-color: #ffc107; color: #333; }
        .status-badge.Aprovado { background-color: #28a745; }
        .status-badge.Reprovado { background-color: #dc3545; }
        
        .actions-financeiro button {
            padding: 6px 10px;
            margin-right: 5px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }
        .actions-financeiro .approve-btn {
            background-color: #28a745;
            color: white;
        }
        .actions-financeiro .approve-btn:hover {
            background-color: #218838;
        }
        .actions-financeiro .reject-btn {
            background-color: #dc3545;
            color: white;
        }
        .actions-financeiro .reject-btn:hover {
            background-color: #c82333;
        }

        .no-sics {
            text-align: center;
            color: #666;
            padding: 20px;
            border: 1px dashed #ccc;
            border-radius: 5px;
            margin-top: 20px;
        }
        #message {
            margin-top: 20px;
            padding: 10px;
            border-radius: 4px;
            text-align: center;
            display: none;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        /* Estilos para a navegação */
        nav {
            margin-bottom: 20px;
            text-align: center;
        }
        nav a {
            margin: 0 10px;
            text-decoration: none;
            color: #007bff;
            font-weight: bold;
        }
        nav a:hover {
            text-decoration: underline;
        }

        /* Overlay e Modal de Senha */
        .password-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .password-modal {
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            text-align: center;
            width: 300px;
        }
        .password-modal h2 {
            margin-bottom: 20px;
            color: #333;
        }
        .password-modal input[type="password"] {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        .password-modal button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
        }
        .password-modal button:hover {
            background-color: #0056b3;
        }
        #passwordError {
            color: red;
            margin-top: 10px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="password-overlay" id="passwordOverlay">
        <div class="password-modal">
            <h2>Acesso Restrito Financeiro</h2>
            <p>Por favor, insira a senha para acessar as aprovações financeiras.</p>
            <input type="password" id="accessPassword" placeholder="Senha de Acesso">
            <button id="submitPassword">Acessar</button>
            <p id="passwordError"></p>
        </div>
    </div>

    <div class="container" id="appContainer">
        <h1>Aprovação Financeira de SICs</h1>

        <div id="sicListAprovacao">
            </div>

        <div id="message"></div>
    </div>

    <script>
        // --- Lógica de Acesso por Senha ---
        const FINANCE_PASSWORD = "financeiro123"; // Mude esta senha!

        const passwordOverlay = document.getElementById('passwordOverlay');
        const accessPasswordInput = document.getElementById('accessPassword');
        const submitPasswordBtn = document.getElementById('submitPassword');
        const passwordError = document.getElementById('passwordError');
        const appContainer = document.getElementById('appContainer');

        // *** IMPORTANTE: COLOQUE A URL DA SUA IMPLANTAÇÃO DO GOOGLE APPS SCRIPT AQUI ***
        const WEB_APP_URL = 'https://script.google.com/macros/s/AKfycbyMSn_ug8ybd_U0psLApK1TjCjo4Tsfvz4EUKe6C3bF5fYuwDePoRTrAG6sjk2JKPdO/exec'; // Ex: https://script.google.com/macros/s/AKfycb.../exec

        submitPasswordBtn.addEventListener('click', function() {
            if (accessPasswordInput.value === FINANCE_PASSWORD) {
                passwordOverlay.style.display = 'none'; // Esconde o overlay
                appContainer.style.display = 'block';   // Mostra o conteúdo
                sessionStorage.setItem('financeAccessGranted', 'true'); // Marca acesso na sessão
                renderSicsForAprovacao(); // Renderiza a tabela após o acesso
            } else {
                passwordError.textContent = 'Senha incorreta.';
                passwordError.style.display = 'block';
            }
        });

        // Verifica se o acesso já foi concedido na sessão
        document.addEventListener('DOMContentLoaded', function() {
            if (sessionStorage.getItem('financeAccessGranted') === 'true') {
                passwordOverlay.style.display = 'none';
                appContainer.style.display = 'block';
                renderSicsForAprovacao(); // Chama o render imediatamente se já logado
            } else {
                passwordOverlay.style.display = 'flex'; // Mantém o overlay visível
                appContainer.style.display = 'none';    // Mantém o conteúdo escondido
            }
        });

        // --- Lógica de Carregamento e Atualização de SICs com Google Apps Script ---

        function displayMessage(text, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = text;
            messageDiv.className = type;
            messageDiv.style.display = 'block';
            setTimeout(() => {
                messageDiv.style.display = 'none';
            }, 5000);
        }

        async function fetchSics() {
            try {
                const response = await fetch(WEB_APP_URL); // Requisição GET para buscar SICs
                if (!response.ok) {
                    throw new Error(`Erro HTTP: ${response.status} - ${response.statusText}`);
                }
                const data = await response.json();
                if (data.status === 'success') {
                    return data.sics;
                } else {
                    displayMessage(`Erro ao carregar SICs: ${data.message}`, 'error');
                    return [];
                }
            } catch (error) {
                console.error('Erro ao buscar SICs:', error);
                displayMessage('Erro de rede ou servidor ao carregar SICs.', 'error');
                return [];
            }
        }

        async function renderSicsForAprovacao() {
            const sicListDiv = document.getElementById('sicListAprovacao');
            sicListDiv.innerHTML = '<p class="no-sics">Carregando SICs...</p>'; // Mensagem de carregamento

            const sics = await fetchSics(); // Busca as SICs do Apps Script

            if (sics.length === 0) {
                sicListDiv.innerHTML = '<p class="no-sics">Não há SICs cadastradas ou pendentes de aprovação financeira.</p>';
                return;
            }

            let tableHTML = `
                <table>
                    <thead>
                        <tr>
                            <th>Número SIC</th>
                            <th>Unidade</th>
                            <th>Fornecedor</th>
                            <th>Status Financeiro Atual</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            sics.forEach(sic => {
                const statusClass = sic.statusFinanceiro.replace(/\s/g, ''); // Remove espaços para classe CSS
                tableHTML += `
                    <tr>
                        <td>${sic.numeroDaSic}</td>
                        <td>${sic.unidade}</td>
                        <td>${sic.fornecedor || 'N/A'}</td>
                        <td><span class="status-badge ${statusClass}">${sic.statusFinanceiro}</span></td>
                        <td class="actions-financeiro">
                            <button class="approve-btn" data-sic="${sic.numeroDaSic}" ${sic.statusFinanceiro === 'Aprovado' || sic.statusFinanceiro === 'Reprovado' ? 'disabled' : ''}>Aprovar</button>
                            <button class="reject-btn" data-sic="${sic.numeroDaSic}" ${sic.statusFinanceiro === 'Aprovado' || sic.statusFinanceiro === 'Reprovado' ? 'disabled' : ''}>Reprovar</button>
                        </td>
                    </tr>
                `;
            });

            tableHTML += `
                    </tbody>
                </table>
            `;
            sicListDiv.innerHTML = tableHTML;

            // Adiciona event listeners aos botões
            document.querySelectorAll('.approve-btn').forEach(button => {
                button.addEventListener('click', function() {
                    updateSicStatus(this.dataset.sic, 'Aprovado', 'Status Financeiro');
                });
            });

            document.querySelectorAll('.reject-btn').forEach(button => {
                button.addEventListener('click', function() {
                    updateSicStatus(this.dataset.sic, 'Reprovado', 'Status Financeiro');
                });
            });
        }

        async function updateSicStatus(numeroSic, newStatus, statusField) {
            console.log('Tentando atualizar SIC. Numero SIC (no HTML):', numeroSic); 
            const confirmUpdate = confirm(`Tem certeza que deseja mudar o status da SIC ${numeroSic} para "${newStatus}"?`);
            if (!confirmUpdate) {
                return;
            }

            const formData = new FormData();
            formData.append('action', 'updateStatus'); // Indica ao Apps Script que é uma atualização
            formData.append('numeroSic', numeroSic);
            formData.append('newStatus', newStatus);
            formData.append('statusField', statusField); // Ex: 'Status Financeiro'

            try {
                const response = await fetch(WEB_APP_URL, {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`Erro HTTP: ${response.status} - ${response.statusText}`);
                }

                const result = await response.json();

                if (result.status === 'success') {
                    displayMessage(`SIC ${numeroSic} foi ${newStatus.toLowerCase()}!`, 'success');
                    // Simulação de e-mail pode ser feita aqui ou diretamente no Apps Script
                    // Se feita no Apps Script, ele terá acesso total ao MailApp
                    renderSicsForAprovacao(); // Recarrega a tabela para refletir a mudança
                } else {
                    displayMessage(`Erro ao atualizar SIC: ${result.message}`, 'error');
                }
            } catch (error) {
                console.error('Erro ao atualizar SIC:', error);
                displayMessage('Erro de conexão ao servidor ao atualizar SIC.', 'error');
            }
        }
    </script>
</body>
</html>